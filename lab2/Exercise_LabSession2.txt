
 Labratory Session 2

 Manipulation using NetworkX and other python libraries

A)
  Use the karateClubDataset used in Laboratory session 1 or downloaded elsewhere https://docs.dgl.ai/en/2.0.x/generated/dgl.data.KarateClubDataset.html
   
   Write a program that 
   
  a) Displays the whole graph 
  b) Displays the degree centrality, eigenvector centrality, Katz centrality, page rank centrality of each node of the network. Draw the network graph where the node with the highest centrality is highlighted (use different color for
        each centrality type)
  c) Draws the distribution (histogram) for each centrality measure
  d) Repeat b) and c) when using closeness centrality, betweenness centrality 
  e) Displays the local clustering coefficient of each node, and draws the corresponding distribution function. Then compare possible link between clustering coefficient values and some centrality measures when scrutinizing the values
     of clustering coefficient/centrality measures of individual nodes.
  f) Calculates the global clustering coefficient of the overall graph (or its largest connected componenty). 
  g) Identify smallest subgraph that has a global clustering coefficient close to the one of the whole graph.  
  h) Identify a subgraph, which is bipartie graph 


B)
Consider the eggo-Facebook dataset, available at https://snap.stanford.edu/data/ego-Facebook.html

Write a program that

a) Calculates the degree, closeness and in-betweeness centrality of each node of the network, and displays the corresponding distribution (histogram)

b) Calculates the shortest distance between node (s) of highest centrality score and node (s) of second highest centrality score (for both degree, closeness, in-betweeness centraility measures)

c) Displays the subgraph where the nodes are most connected (in terms of degree centrality).. Can use your own reasoning for this issue

d) Calculates the local clustering coefficients and the shortest distance among the nodes with highest and second highest clustering coefficient.

d) Checks whether Power-law distribution is fitted

 

 
